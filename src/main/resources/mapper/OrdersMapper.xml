<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nan.buy.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.nan.buy.model.Orders" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_payment" property="orderPayment" jdbcType="VARCHAR" />
    <result column="order_address" property="orderAddress" jdbcType="VARCHAR" />
    <result column="order_email" property="orderEmail" jdbcType="VARCHAR" />
    <result column="order_user" property="orderUser" jdbcType="VARCHAR" />
    <result column="order_time" property="orderTime" jdbcType="VARCHAR" />
    <result column="order_sum" property="orderSum" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, order_payment, order_address, order_email, order_user, order_time, order_sum
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nan.buy.model.Orders" >
    insert into orders (order_id, order_payment, order_address, 
      order_email, order_user, order_time, 
      order_sum)
    values (#{orderId,jdbcType=VARCHAR}, #{orderPayment,jdbcType=VARCHAR}, #{orderAddress,jdbcType=VARCHAR}, 
      #{orderEmail,jdbcType=VARCHAR}, #{orderUser,jdbcType=VARCHAR}, #{orderTime,jdbcType=VARCHAR}, 
      #{orderSum,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nan.buy.model.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderPayment != null" >
        order_payment,
      </if>
      <if test="orderAddress != null" >
        order_address,
      </if>
      <if test="orderEmail != null" >
        order_email,
      </if>
      <if test="orderUser != null" >
        order_user,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="orderSum != null" >
        order_sum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderPayment != null" >
        #{orderPayment,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null" >
        #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderEmail != null" >
        #{orderEmail,jdbcType=VARCHAR},
      </if>
      <if test="orderUser != null" >
        #{orderUser,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="orderSum != null" >
        #{orderSum,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nan.buy.model.Orders" >
    update orders
    <set >
      <if test="orderPayment != null" >
        order_payment = #{orderPayment,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null" >
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderEmail != null" >
        order_email = #{orderEmail,jdbcType=VARCHAR},
      </if>
      <if test="orderUser != null" >
        order_user = #{orderUser,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="orderSum != null" >
        order_sum = #{orderSum,jdbcType=DOUBLE},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nan.buy.model.Orders" >
    update orders
    set order_payment = #{orderPayment,jdbcType=VARCHAR},
      order_address = #{orderAddress,jdbcType=VARCHAR},
      order_email = #{orderEmail,jdbcType=VARCHAR},
      order_user = #{orderUser,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=VARCHAR},
      order_sum = #{orderSum,jdbcType=DOUBLE}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>